% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/frame.R
\name{ez.clcolnames}
\alias{ez.clcolnames}
\title{sanitize col names}
\usage{
ez.clcolnames(
  df,
  pattern = "[[:space:][:punct:]]",
  replacement = ".",
  fixed = FALSE,
  ignore.case = FALSE,
  perl = TRUE,
  col = NULL
)
}
\arguments{
\item{df}{df}

\item{pattern}{search}

\item{replacement}{replacement}

\item{fixed}{FALSE=regex mode on, TRUE=regex mode off}

\item{ignore.case}{if FALSE, the pattern matching is case sensitive and if TRUE, case is ignored during matching.}

\item{perl}{Perl-compatible regexps be used, without perl, [[:space:][:punct:]] works, but not [\\s[:punct:]]
so seems always a good idea to turn on perl compatible. see \code{\link{gsub}}.
ignored when fixed=TRUE}

\item{col}{NULL=all columns, otherwise restricted to specified cols, eg, ( internally evaluated by eval('dplyr::select()') )
\cr 'c(sample_num,mother_num)' (quoted) or c("sample_num","mother_num") (not quoted)
\cr 1:4 (not quoted)
\cr 'col1:col3' (quoted)
\cr '-(ABCB1_c1236t:pgp_rs2032582)', '-c(neonate_admit_NICU,BDNF)' (quoted)}
}
\value{
returns a new df with column names cleaned, old df does not change
}
\description{
replace certain characters (all occurrence) in all column names, using regular expression and gsub(). see also \code{\link{ez.clcoldata}}
}
\examples{
all upper to lower using regex (ignore.case=FALSE or TRUE does not matter)
ez.clcolnames(iris,pattern='([[:upper:]])', replacement = '\\\\L\\\\1', perl = TRUE, ignore.case=FALSE)
}
\seealso{
see also \code{\link{ez.clcoldata}}
}
