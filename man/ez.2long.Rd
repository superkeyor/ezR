% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/frame.R
\name{ez.2long}
\alias{ez.2long}
\title{reconstruct to long format, wrapper of \code{\link[stats]{reshape}}}
\usage{
ez.2long(
  df,
  id,
  indexname,
  index,
  measurename = NULL,
  measure = NULL,
  drop = NULL,
  ...
)
}
\arguments{
\item{id}{unique identification variable, or variable combination}

\item{indexname}{variable name (column to be created) for timing/repetition/index variable, such as "session"}

\item{index}{level name (value labels to be created) for each timing/repetition/index point, such as c("1,2"), c("Pre, Post")}

\item{measurename}{variable name (column/columns to be created) for the measurement, such as "BDI"}

\item{measure}{column names (existing) that are the repeated measures, such as c("BDI_Pre","BDI_Post")}

\item{drop}{variables to drop before reshaping}
}
\value{
returns a new df, label attributes seem to be intact.
}
\description{
can handle one (similar to gather(), which does not require index input) or two repetitions
}
\note{
refer to my spss syntax 'Time(2) | Measure1(Pre1 Post1) | Measure2(Pre2 Post2) +/- Subject'
\cr if index=c("Pre","Post"), then the character would not be viewed by ez.vx; index=1:2 will be int and fine.
}
\examples{
df <- data.frame(
    id = 1:10,
    time = as.Date('2009-01-01') + 0:9,
    Q3.2.1. = rnorm(10, 0, 1),
    Q3.2.2. = rnorm(10, 0, 1),
    Q3.2.3. = rnorm(10, 0, 1),
    Q3.3.1. = rnorm(10, 0, 1),
    Q3.3.2. = rnorm(10, 0, 1),
    Q3.3.3. = rnorm(10, 0, 1)
)
ez.2long(df, "id",
       "loop_number",c(1:3),
       c('Q3.2','Q3.3'),
       list(c("Q3.2.1.","Q3.2.2.","Q3.2.3."),c("Q3.3.1.","Q3.3.2.","Q3.3.3.")))
}
\seealso{
\code{\link[tidyr]{gather}}, \code{\link[tidyr]{spread}}, \code{\link[tidyr]{separate}}, \code{\link[tidyr]{unite}}
\cr \code{\link[dplyr]{select}}, \code{\link[dplyr]{slice}}
\cr \code{\link[dplyr]{distinct}}, \code{\link[dplyr]{arrange}}
\cr \code{\link[dplyr]{summarise}}, \code{\link[dplyr]{count}}, \code{\link[dplyr]{mutate}}
\cr \code{\link[dplyr]{group_by}}, \code{\link[dplyr]{left_join}}, \code{\link[dplyr]{right_join}}, \code{\link[dplyr]{inner_join}}, \code{\link[dplyr]{full_join}}, \code{\link[dplyr]{semi_join}}, \code{\link[dplyr]{anti_join}}
\cr \code{\link[dplyr]{intersect}}, \code{\link[dplyr]{union}}, \code{\link[dplyr]{setdiff}}
\cr \code{\link[dplyr]{bind_rows}}, \code{\link[dplyr]{bind_cols}}

Other data transformation functions: 
\code{\link{ez.2char}()},
\code{\link{ez.2factor}()},
\code{\link{ez.2label}()},
\code{\link{ez.2lower}()},
\code{\link{ez.2value}()},
\code{\link{ez.2wide}()},
\code{\link{ez.compute}()},
\code{\link{ez.del}()},
\code{\link{ez.move}()},
\code{\link{ez.newcol}()},
\code{\link{ez.num}()},
\code{\link{ez.recode}()},
\code{\link{ez.recols}()},
\code{\link{ez.recol}()},
\code{\link{ez.rename}()},
\code{\link{ez.replace}()},
\code{\link{ez.rncols}()},
\code{\link{ez.rncol}()},
\code{\link{ez.select}()},
\code{\link{ez.sort}()},
\code{\link{ez.split}()},
\code{\link{ez.str}()},
\code{\link{ez.unique}()},
\code{\link{left_join}()}
}
\concept{data transformation functions}
