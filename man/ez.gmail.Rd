% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/os.R
\name{ez.gmail}
\alias{ez.gmail}
\title{Send mail with Gmail}
\usage{
ez.gmail(to, subject, htmlbody, attachment = NULL)
}
\arguments{
\item{to}{email address, if multiple seperated by comma}

\item{subject}{'Gmail from R'}

\item{htmlbody}{'<b>Gmailr</b> is a <i>very</i> handy package!' or 'Email using R.'}

\item{attachment}{default NULL, 'BazaarQueriesforURLData.txt'}
}
\value{
returns nothing
}
\description{
Send mail with Gmail
}
\note{
updated gmailr requires rlang >= 0.4.0, which would mess up dplyr
As of rlang 0.4.0, dplyr must be at least version 0.8.0.
dplyr 0.7.4 is too old for rlang 0.4.2.

first-time use:
https://github.com/r-lib/gmailr#setup
1) create a google project for it. The easiest way to do this is via the Python Quickstart.
https://developers.google.com/gmail/api/quickstart/python
Click the Enable the Gmail API button.
In the resulting dialog click the DOWNLOAD CLIENT CONFIGURATION on your computer.

2) Tell gmailr where the JSON lives
Call gmailr::gm_auth_configure(path = "path/to/downloaded/json")
call gmailr::gm_auth() to start the OAuth flow to verify to google 
that you would like your gmailr project to have access to your email. 
You will get a scary warning about an untrusted application, 
this is because the application is the one you just created, 
click advanced and Go to gmailr to proceed to do the oauth flow.
}
