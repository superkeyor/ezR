% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/frame.R
\name{ez.2value}
\alias{ez.2value}
\title{e=e, f(0,1)<-f[1,2], g<-g/h/i/j/k}
\usage{
ez.2value(x, col = NULL, start.at = 0, keep.labels = TRUE, ...)
}
\arguments{
\item{x}{a data frame or a vector/col}

\item{col}{internally evaluated by eval('dplyr::select()')
\cr        if x is a data frame, col is specified (e.g., "cond"), convert that col only
\cr        if x is a data frame, col is unspecified (i.e., NULL default), convert all possible cols in x
\cr        if x is not a data frame, col is ignored}

\item{start.at}{starting index, i.e. the lowest numeric value of the variable's value range.
\cr If NULL, the lowest value of the returned numeric variable corresponds to the lowest factor level (if factor is numeric, eg, factor(1:2)->c(1,2))
\cr or to 1 (if factor levels are not numeric, factor(c('girl','boy'))->c(2,1)).
\cr
\cr Attention: ez.2value(c('','2','1'),start.at = NULL) -> c(1,3,2),  ez.2value(c('','2','1'),start.at = 0) -> c(0,2,1)
\cr
\cr To keep consistent with other R functions (eg, lm which converts numeric/non-numeric factor to values starting from 0), set start.at=0 in ez.2value(), then factor(1:2)->c(0,1), factor(c('girl','boy'))->c(1,0)
\cr in lm() the coding (0,1) vs.(1,2) does not affect slope, but changes intercept (but a coding from 1,2->1,3 would change slope--interval difference matters)}
}
\value{
returns a numeric variable or a data frame with changed col(s)
\cr if x is a factor with normal chars, will be converted to 1 2 3 etc, see the example
\cr if x, however, is a factor with chars of numbers ez.2value(c("2","4","6.3"),start.at=NULL), will be converted to (2 4 6.3) etc, see the example
}
\description{
e=e, f(0,1)<-f[1,2], g<-g/h/i/j/k
\cr number e<-f[(0/1)]|   attr number g(0/1)<--factor attr number h[0/1] / factor char i[girl/boy] / char j/k[(girl/boy)]
}
\details{
Variable label will be kept. opposite of \code{\link{ez.2factor}}, \code{\link{ez.2label}}  wrapper of \code{\link{sjmisc_to_value}}
}
\examples{
e=c(1,2); f=factor(1:2)
g=c(0,0,1,1,1,0); attr(g,'value.labels') <- c(boy=1,girl=0)
h=factor(c(0,0,1,1,1,0)); attr(h,'labels') <- c(boy=1,girl=0)
i=factor(c('girl','girl','boy','boy','boy','girl'))
j=c('x','y'); k=factor(c('x','y'))

ez.2label: e=e, f=f, g/h/i->i, j=j, k=k
ez.2value: e=e, f(0,1)<-f[1,2], g<-g/h/i/j/k
ez.2factor: ef->f, g/h->h, i=i, factor[x,y,z]<j/k

ez.2value(c('','2','1'),start.at = NULL) # -> c(1,3,2)
ez.2value(c('','2','1'),start.at = 0) # -> c(0,2,1)
ez.num(c('','2','1')) # -> c(NA,2,1)
ez.2value(c("2","4","6.3"),start.at=NULL)  # -> (2.0 4.0 6.3)
ez.2value(factor(c("2","4","7.3")),start.at=0)  # -> (0.0 2.0 5.3)
for consistent and easy convertion, consider to use ez.num(c("2","4","7.3")), ez.num(factor(c("2","4","7.3")), force=T) in this case
}
\seealso{
\code{\link{ez.num}}

Other data transformation functions: 
\code{\link{ez.2char}()},
\code{\link{ez.2factor}()},
\code{\link{ez.2label}()},
\code{\link{ez.2long}()},
\code{\link{ez.2lower}()},
\code{\link{ez.2wide}()},
\code{\link{ez.compute}()},
\code{\link{ez.del}()},
\code{\link{ez.move}()},
\code{\link{ez.newcol}()},
\code{\link{ez.num}()},
\code{\link{ez.recode}()},
\code{\link{ez.recols}()},
\code{\link{ez.recol}()},
\code{\link{ez.rename}()},
\code{\link{ez.replace}()},
\code{\link{ez.rncols}()},
\code{\link{ez.rncol}()},
\code{\link{ez.select}()},
\code{\link{ez.sort}()},
\code{\link{ez.split}()},
\code{\link{ez.str}()},
\code{\link{ez.unique}()},
\code{\link{left_join}()}
}
\concept{data transformation functions}
