% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stats.R
\name{ez.boxcox}
\alias{ez.boxcox}
\title{box-cox power transformation \href{https://drive.google.com/file/d/1tsXLgRSq_svd-hvA02XmXSJmPX6SCbvf/view}{GDoc Note}}
\usage{
ez.boxcox(
  y,
  col = NULL,
  na.rm = FALSE,
  plot = TRUE,
  print2scr = TRUE,
  force = TRUE,
  method = c("boxcox", "modified.tukey"),
  precise = c("rounded", "raw"),
  ...
)
}
\arguments{
\item{y}{a data frame or a vector}

\item{col}{passed to \code{\link{ez.selcol}}
\cr        if x is a data frame, col specified, process that col only.
\cr        if x is a data frame, col unspecified (i.e., NULL default), process all cols
\cr        if x is not a data frame, col is ignored
\cr        could be multiple cols}

\item{na.rm}{rm na from y,x (pairwise), if not, NA stays as is. applicable only if y is a vector.}

\item{plot}{boxcox plot. applicable only if y is a vector, only when there is an actual transformation}

\item{print2scr}{print out transformation parameters}

\item{force}{T = transform regardless, or F = only if p.lambda rounded is less than .05.}

\item{method}{"boxcox" is \code{out = car::bcPower(y, lambda=lambda.in.use, jacobian.adjusted = FALSE, gamma=NULL)} for all positive, \code{out = car::bcnPower(y, lambda=lambda.in.use, jacobian.adjusted = FALSE, gamma=gamma)} for any non-positive--ie, zero or negative. 
\cr 
\cr The selection between \code{\link[car]{bcPower}} and \code{\link[car]{bcnPower}} is done automatically by this function.
\cr 
\cr Where \code{\link[car]{bcPower}} is: ((x+gamma)^(lambda)-1)/lambda if lambda not 0; log(x+gamma) if lambda 0. Here gamma NULL means 0.
\cr 
\cr \code{\link[car]{bcnPower}} is: ((0.5 * (x + sqrt(x^2 + gamma^2)))^lambda - 1)/lambda if lambda not 0; log(0.5 * (x + sqrt(x^2 + gamma^2))) if lambda 0. This bcnPower is Hawkins and Weisberg (2017). While allowing for the transformed data to be interpreted similarly to the interpretation of Box-Cox
transformed, it is much less biased than by setting the parameter gamma to be non-zero in the Box-Cox family.
\cr
\cr 
"modified.tukey" \code{out = car::basicPower(y,lambda=lambda.in.use, gamma=NULL); if (lambda.in.use<0) out = -1*out}.
\cr 
\cr Where \code{\link[car]{basicPower}} is: x^lambda if lambda not 0; log(x) if lambda 0
\cr
\cr Because neither tukey or modified tukey could handle zero or negative input, this function will auto force switch to \code{\link[car]{bcnPower}}
\cr Therefore, both "tukey" and "boxcox" methods here keep the ordering.}

\item{precise}{use rounded lambda, one of c(0, 0.33, -0.33, 0.5, -0.5, 1, -1, 2, -2) or raw/calculated lambda}
}
\value{
returns transformed y, or original y if no transformation occurs.
}
\description{
box-cox power transformation \href{https://drive.google.com/file/d/1tsXLgRSq_svd-hvA02XmXSJmPX6SCbvf/view}{GDoc Note}
}
\note{
Box and Cox (1964) \code{\link[car]{bcPower}} and modified tukey \code{\link[car]{basicPower}} can only deal with non-negative responses. Also consider applying z standardization to boxcox-transformed data.
\cr lambda is a tuning parameter that can be optimized in a way that the distribution of the transformed data has the largest similarity to a normal distribution. There are several proposals to optimize lambda.
\cr The Box-Cox-transformed values do not guarantee normality although the data should be less skewed and should have less extreme values than before transformation.
\cr Some research (Zwiener et al, 2014, PLOS ONE) pointed out that z Standardization of covariates leads to better prediction performance independent of the underlying transformation used (eg., raw, log, boxcox)
\cr see also \code{\link[MASS]{boxcox}}
}
